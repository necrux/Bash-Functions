#!/bin/bash
# Function to select local git repo from a menu; filter menu with positional parameters.
# Be sure to fill in the REPO_DIR variable (first line of function).
# Bash 4+ required for associative arrays.
## Copy/Paste Nerds Beware ##
# This function uses a here-doc with the '<<-' operator.
# This allows you to indent the here-doc, but it forces a tab at the start of each line.
function repos {
  local REPO_DIR=
  declare -A REPO_PATH

  if [ -z "$1" ]; then
    for repo in $(ls ${REPO_DIR}); do
      REPO_PATH[${repo}]="${REPO_DIR}/${repo}"
    done
  else
    for repo in $(ls ${REPO_DIR} | grep -i $1); do
      REPO_PATH[${repo}]="${REPO_DIR}/${repo}"
    done
  fi

  case ${#REPO_PATH[@]} in
  0)
    echo "No repos found."
    return 1
    ;;
  1)
    for destination in ${!REPO_PATH[@]}; do
      cd ${REPO_PATH[${destination}]}
    done
    ;;
  *)
    select destination in ${!REPO_PATH[@]}; do
      if [ -e "${REPO_PATH[${destination}]}" ]; then
        cd ${REPO_PATH[${destination}]}
        break
      else
        echo "Incorrect entry."
      fi > /dev/null 2>&1
    done
    ;;
  esac
	cat <<- EOF

	  $(echo -e "\e[0;31m")    ****** GIT STATUS ******$(echo -e "\e[0m")
	  $(git status)

	  $(echo -e "\e[0;31m")    ** DIRECTORY CONTENTS **$(echo -e "\e[0m")
	  $(ls -l)
	EOF
}
